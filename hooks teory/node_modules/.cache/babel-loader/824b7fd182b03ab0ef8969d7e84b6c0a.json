{"ast":null,"code":"var _jsxFileName = \"/Users/barski/Library/Mobile Documents/com~apple~CloudDocs/WORK/React Udemy/react1/react4/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { act } from 'react-dom/test-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const emailReducer = (state, action) => {\n    if (action.type === \"USER_INPUT\") {\n      return {\n        value: action.val,\n        isValid: action.val.includes(\"@\")\n      };\n    }\n\n    if (action.type === \"INPUT_BLUR\") {\n      return {\n        value: state.value,\n        isValid: state.value.includes(\"@\")\n      };\n    }\n\n    return {\n      value: '',\n      isValid: false\n    };\n  };\n\n  const passwordReducer = (state, action) => {\n    if (action.type === \"USER_PASSWORD\") {\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6\n      };\n    }\n\n    if (action.type === \"PASSWORD_BLUR\") {\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n    }\n\n    return {\n      value: '',\n      isValid: false\n    };\n  };\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  }); // useEffect(() => {\n  //     console.log(\"effect run\")\n  // }, [enteredPassword])\n  // useEffect(() => {\n  //     const identifier = setTimeout(() => {\n  //         setFormIsValid(\n  //             enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //         )\n  //         console.log(\"stop\")\n  //     }, 500)\n  //     return () => {\n  //         clearTimeout(identifier)\n  //         console.log(\"check\")\n  //     }\n  // }, [enteredEmail, enteredPassword])\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(emailState.value.includes('@') && passwordState.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_PASSWORD\",\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"PASSWORD_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"xiQmLot7EPKquxHZMXPqK3LA+EI=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/barski/Library/Mobile Documents/com~apple~CloudDocs/WORK/React Udemy/react1/react4/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","act","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { act } from 'react-dom/test-utils';\n\nconst Login = (props) => {\n    // const [enteredEmail, setEnteredEmail] = useState('');\n    // const [emailIsValid, setEmailIsValid] = useState();\n    const [enteredPassword, setEnteredPassword] = useState('');\n    const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const emailReducer = (state, action) => {\n        if (action.type === \"USER_INPUT\") {\n            return { value: action.val, isValid: action.val.includes(\"@\") }\n        }\n        if (action.type === \"INPUT_BLUR\") {\n            return { value: state.value, isValid: state.value.includes(\"@\") }\n        }\n        return { value: '', isValid: false }\n    }\n\n    const passwordReducer = (state, action) => {\n        if (action.type === \"USER_PASSWORD\") {\n            return { value: action.val, isValid: action.val.trim().length > 6 }\n        }\n        if (action.type === \"PASSWORD_BLUR\") {\n            return { value: state.value, isValid: state.value.trim().length > 6 }\n        }\n        return { value: '', isValid: false }\n    }\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: '',\n        isValid: null\n    })\n\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n        value: '',\n        isValid: null\n    })\n\n    // useEffect(() => {\n    //     console.log(\"effect run\")\n    // }, [enteredPassword])\n\n    // useEffect(() => {\n    //     const identifier = setTimeout(() => {\n    //         setFormIsValid(\n    //             enteredEmail.includes('@') && enteredPassword.trim().length > 6\n    //         )\n    //         console.log(\"stop\")\n    //     }, 500)\n    //     return () => {\n    //         clearTimeout(identifier)\n    //         console.log(\"check\")\n    //     }\n    // }, [enteredEmail, enteredPassword])\n\n    const emailChangeHandler = (event) => {\n        dispatchEmail({ type: \"USER_INPUT\", val: event.target.value })\n        setFormIsValid(\n            emailState.value.includes('@') && passwordState.trim().length > 6\n        )\n    };\n\n    const passwordChangeHandler = (event) => {\n        dispatchPassword({ type: \"USER_PASSWORD\", val: event.target.value })\n\n        setFormIsValid(\n            event.target.value.trim().length > 6 && emailState.isValid\n        );\n    };\n\n    const validateEmailHandler = () => {\n        dispatchEmail({ type: \"INPUT_BLUR\" })\n    };\n\n    const validatePasswordHandler = () => {\n        dispatchPassword({ type: \"PASSWORD_BLUR\" })\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        props.onLogin(emailState.value, passwordState.val);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <div\n                    className={`${classes.control} ${emailState.isValid === false ? classes.invalid : ''\n                        }`}\n                >\n                    <label htmlFor=\"email\">E-Mail</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={emailState.value}\n                        onChange={emailChangeHandler}\n                        onBlur={validateEmailHandler}\n                    />\n                </div>\n                <div\n                    className={`${classes.control} ${passwordState.isValid === false ? classes.invalid : ''\n                        }`}\n                >\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={passwordState.value}\n                        onChange={passwordChangeHandler}\n                        onBlur={validatePasswordHandler}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n                        Login\n          </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}