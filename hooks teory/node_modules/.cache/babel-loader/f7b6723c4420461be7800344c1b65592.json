{"ast":null,"code":"var _jsxFileName = \"/Users/barski/Library/Mobile Documents/com~apple~CloudDocs/WORK/React Udemy/react1/react4/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { act } from 'react-dom/test-utils';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const cxt = useContext(AuthContext);\n\n  const emailReducer = (state, action) => {\n    if (action.type === \"USER_INPUT\") {\n      return {\n        value: action.val,\n        isValid: action.val.includes(\"@\")\n      };\n    }\n\n    if (action.type === \"INPUT_BLUR\") {\n      return {\n        value: state.value,\n        isValid: state.value.includes(\"@\")\n      };\n    }\n\n    return {\n      value: '',\n      isValid: false\n    };\n  };\n\n  const passwordReducer = (state, action) => {\n    if (action.type === \"USER_PASSWORD\") {\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6\n      };\n    }\n\n    if (action.type === \"PASSWORD_BLUR\") {\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n    }\n\n    return {\n      value: '',\n      isValid: false\n    };\n  };\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      setFormIsValid(emailIsValid && passwordIsValid);\n      console.log(\"stop\");\n    }, 500);\n    return () => {\n      clearTimeout(identifier);\n      console.log(\"check\");\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    }); // setFormIsValid(\n    //     emailState.value.includes('@') && passwordState.isValid\n    // )\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_PASSWORD\",\n      val: event.target.value\n    }); // setFormIsValid(\n    //     passwordState.isValid && emailState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"PASSWORD_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      cxt.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {} else if (!passwordIsValid) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        type: \"email\",\n        label: \"E-Mail\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"n0G810MFXZW7Clm0a4vxcLZzn/Y=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/barski/Library/Mobile Documents/com~apple~CloudDocs/WORK/React Udemy/react1/react4/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","act","AuthContext","Input","Login","props","formIsValid","setFormIsValid","cxt","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { act } from 'react-dom/test-utils';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input/Input';\n\nconst Login = (props) => {\n    // const [enteredEmail, setEnteredEmail] = useState('');\n    // const [emailIsValid, setEmailIsValid] = useState();\n    // const [enteredPassword, setEnteredPassword] = useState('');\n    // const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n    const cxt = useContext(AuthContext)\n\n    const emailReducer = (state, action) => {\n        if (action.type === \"USER_INPUT\") {\n            return { value: action.val, isValid: action.val.includes(\"@\") }\n        }\n        if (action.type === \"INPUT_BLUR\") {\n            return { value: state.value, isValid: state.value.includes(\"@\") }\n        }\n        return { value: '', isValid: false }\n    }\n\n    const passwordReducer = (state, action) => {\n        if (action.type === \"USER_PASSWORD\") {\n            return { value: action.val, isValid: action.val.trim().length > 6 }\n        }\n        if (action.type === \"PASSWORD_BLUR\") {\n            return { value: state.value, isValid: state.value.trim().length > 6 }\n        }\n        return { value: '', isValid: false }\n    }\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: '',\n        isValid: null\n    })\n\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n        value: '',\n        isValid: null\n    })\n\n    const { isValid: emailIsValid } = emailState;\n    const { isValid: passwordIsValid } = passwordState;\n\n    useEffect(() => {\n        const identifier = setTimeout(() => {\n            setFormIsValid(\n                emailIsValid && passwordIsValid\n            )\n            console.log(\"stop\")\n        }, 500)\n        return () => {\n            clearTimeout(identifier)\n            console.log(\"check\")\n        }\n    }, [emailIsValid, passwordIsValid])\n\n    const emailChangeHandler = (event) => {\n        dispatchEmail({ type: \"USER_INPUT\", val: event.target.value })\n        // setFormIsValid(\n        //     emailState.value.includes('@') && passwordState.isValid\n        // )\n    };\n\n    const passwordChangeHandler = (event) => {\n        dispatchPassword({ type: \"USER_PASSWORD\", val: event.target.value })\n\n        // setFormIsValid(\n        //     passwordState.isValid && emailState.isValid\n        // );\n    };\n\n    const validateEmailHandler = () => {\n        dispatchEmail({ type: \"INPUT_BLUR\" })\n    };\n\n    const validatePasswordHandler = () => {\n        dispatchPassword({ type: \"PASSWORD_BLUR\" })\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        if (formIsValid) {\n            cxt.onLogin(emailState.value, passwordState.value);\n        } else if (!emailIsValid) {\n\n        } else if (!passwordIsValid) {\n            \n        }\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <Input\n                    id=\"email\"\n                    type=\"email\"\n                    label=\"E-Mail\"\n                    isValid={emailIsValid}\n                    value={emailState.value}\n                    onChange={emailChangeHandler}\n                    onBlur={validateEmailHandler}\n                />\n                <Input\n                    id=\"password\"\n                    type=\"password\"\n                    label=\"Password\"\n                    isValid={passwordIsValid}\n                    value={passwordState.value}\n                    onChange={passwordChangeHandler}\n                    onBlur={validatePasswordHandler}\n                />\n                <div className={classes.actions}>\n                    <Button type=\"submit\" className={classes.btn}>\n                        Login\n          </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}